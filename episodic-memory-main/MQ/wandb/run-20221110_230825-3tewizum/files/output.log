Traceback (most recent call last):
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Train.py", line 153, in <module>
    Train_VSGN(opt)
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Train.py", line 43, in Train_VSGN
    train_VSGN_epoch(train_loader, model, optimizer, epoch, writer, opt)
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Train.py", line 74, in train_VSGN_epoch
    losses, pred_action, pred_start, pred_end = model(input_data, num_frms, gt_action, gt_start, gt_end,  gt_bbox, num_gt)
  File "/home/s5091217/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/s5091217/.local/lib/python3.9/site-packages/torch/nn/parallel/data_parallel.py", line 166, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/s5091217/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Models/VSGN.py", line 68, in forward
    feats_enc, feats_dec = self.xGPN(input, num_frms)
  File "/home/s5091217/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Models/XGPN.py", line 101, in forward
    feats_enc = self._encoder(input, num_frms)
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Models/XGPN.py", line 75, in _encoder
    x = self.levels_enc[i](x, num_frms)
  File "/home/s5091217/.local/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Models/GCNs.py", line 108, in forward
    neigh_idx = get_neigh_idx_semantic(x, self.n_neigh, num_frms, self.opt)
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Models/GCNs.py", line 41, in get_neigh_idx_semantic
    neigh_idx = knn(x, num_frms, opt, k=n_neigh).to(dtype=torch.float32)
  File "/data/s5091217/code_ego4d/episodic-memory-main/MQ/Models/GCNs.py", line 13, in knn
    dif = torch.sum((x.unsqueeze(2) - y.unsqueeze(3))** 2, dim=1)
  File "/home/s5091217/.local/lib/python3.9/site-packages/torch/_tensor.py", line 32, in wrapped
    return f(*args, **kwargs)
RuntimeError: CUDA out of memory. Tried to allocate 9.86 GiB (GPU 0; 32.00 GiB total capacity; 10.29 GiB already allocated; 8.79 GiB free; 19.91 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF